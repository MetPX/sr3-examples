
broker amqps://${CLUSTER_AMQP_USER}@${CLUSTER_AMQP_BROKER}

# sender will subscribe to this exchange (like a tv channel) for
# notification messages about new files to upload
exchange ${UPLOADING_EXCHANGE}

# sento host should match Host in ~/.ssh/config
sendTo sftp://${CLUSTER_SSH_HOSTNAME}

# how many parallel transfer processes.
instances 5

# while files are being uploaded, have a .tmp suffix:
inflight .tmp

# use scp binary for files bigger than a threshold.
# for smaller files, it batches a whole batch of transfers over a single
# connection, saving setup/teardown per file, but done in python.
# for larger files, a binary will consume less cpu, and likely be faster
# if the link between both ends can support it.
accelThreshold 1M

# by default file removals will also be updated on hpfx.
# suppress sending of file/directory removal.
fileEvents -delete,rmdir

# if you want the local file deleted after successful upload
# uncoment this:
# delete_source

# bug in 3.0.56... baseDir needs trailing / for delete_source to work.
# fixed in 3.0.57

# perhaps you have a faster/better large file transfer method available?
# wrap it in a script that accepts scp style invocation
# accelScpCommand /usr/bin/your_fancy_scp %s %d


# ignore files if you see them more than once.
nodupe_ttl on

# exclude working files (that end in .tmp)
reject .*.tmp$
directory ${CLUSTER_SSH_FOLDER}
accept .*

# posting files delivered for further processing by hpfx
#
post_broker hpfx://${CLUSTER_AMQP_USER}@${CLUSTER_AMQP_BROKER}

post_baseUrl sftp:///${CLUSTER_SSH_HOSTNAME}
post_baseDir ${CLUSTER_SSH_FOLDER}

post_exchange ${CLUSTER_EXCHANGE}
